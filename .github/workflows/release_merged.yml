name: Release merged
on:
  pull_request:
    branches:
      - main
    types: [closed]
env:
  BASE_NAME: ${{ github.head_ref }}

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v4
        with:
          go-version: 1.19

      - uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build
        run: go build

      - uses: actions/upload-artifact@v3
        with:
          name: nsuite-kmscli-${{ runner.os }}
          path: nsuite-kmscli*

  draft_release:
    needs: build
    if: ${{ github.event.pull_request.merged == true && startsWith(github.head_ref, 'release/v') }}
    runs-on: ubuntu-latest

    steps:
      - uses: tibdex/github-app-token@v1
        id: generate_token
        with:
          app_id: ${{ secrets.ACTIONS_SUPPORTER_APP_ID }}
          private_key: ${{ secrets.ACTIONS_SUPPORTER_PRIVATE_KEY }}

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.generate_token.outputs.token }}

      - name: Set tag name
        run: |
          version=${BASE_NAME#release/}
          echo "version=$version"
          echo "TAG_NAME=$version" >> $GITHUB_ENV

      - name: Setup git config
        run: |
          git config --global user.email "devel@nsuite.io"
          git config --global user.name "GitHub Actions"

      - name: merge to develop
        run: |
          git checkout -t origin/develop
          git merge --no-edit --no-ff main
          git push
          git checkout main

      - name: Tag version
        run: |
          git tag $TAG_NAME
          git push origin $TAG_NAME

      - uses: actions/download-artifact@v2
      - name: Archive
        run: |
          ls -la *
          for file in nsuite-kmscli-*
          do
            chmod +x $file/*
            zip $(basename $file).zip $file/*
          done
          ls -la *

      - uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.TAG_NAME }}
          draft: true
          generateReleaseNotes: true
          artifacts: "*.zip"
          token: ${{ secrets.GITHUB_TOKEN }}
